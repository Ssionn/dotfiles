#!/usr/bin/env bash

# This script sets up Neovim and related tools on various Linux distributions, macOS, or WSL.
# It creates symlinks for config files, runs Neovim package management, and installs dependencies.

set -e

# Get the directory of the script
DOTFILES=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

create_symlink() {
  local src=$1
  local dest=$2

  rm -rf "$dest"
  ln -s "$src" "$dest"
  echo "Created symlink: $src -> $dest"
}

install_package() {
  local package=$1
  local install_cmd=$2
  local verify_cmd=$3

  if eval "$verify_cmd"; then
    echo "$package is already installed."
  else
    echo "Installing $package..."
    eval "$install_cmd"

    # Verify installation
    if eval "$verify_cmd"; then
      echo "$package has been successfully installed."
    else
      echo "$package installation may have failed. Please install it manually."
      exit 1
    fi
  fi
}

install_ripgrep() {
  if command -v apt-get &>/dev/null; then
    sudo apt-get update -y && sudo apt-get install -y ripgrep
  elif command -v brew &>/dev/null; then
    brew install ripgrep
  elif command -v dnf &>/dev/null; then
    sudo dnf install -y ripgrep
  elif command -v pacman &>/dev/null; then
    sudo pacman -S ripgrep --noconfirm
  elif command -v zypper &>/dev/null; then
    sudo zypper install -y ripgrep
  else
    echo "Package manager not detected. Please install ripgrep manually."
    exit 1
  fi
}

install_lf() {
  if command -v apt-get &>/dev/null; then
    sudo apt-get update -y && sudo apt-get install -y lf
  elif command -v brew &>/dev/null; then
    brew install lf
  elif command -v dnf &>/dev/null; then
    sudo dnf install -y lf
  elif command -v pacman &>/dev/null; then
    sudo pacman -S lf --noconfirm
  elif command -v zypper &>/dev/null; then
    sudo zypper install -y lf
  else
    echo "Package manager not detected. Please install lf manually."
    exit 1
  fi
}

run_packer_sync() {
  echo "Running Packer sync..."
  nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
}

build_telescope_fzf_native() {
  local dir="$1"

  if [ -d "$dir" ]; then
    cd "$dir"
    echo "Entered $dir directory"

    if command -v make &>/dev/null; then
      if [ -f "Makefile" ]; then
        if make -q; then
          echo "Nothing to be done for 'make'. Skipping."
        else
          echo "Running make command..."
          make
        fi
      else
        echo "No Makefile found. Skipping make."
      fi
    else
      echo "Error: 'make' command not found. Please install build essentials."
    fi

    cd - >/dev/null
  else
    echo "Error: $dir directory not found. Make sure the plugin is installed before running this script."
  fi
}

run_npm_install() {
  local dir="$1"

  if [ -d "$dir" ]; then
    cd "$dir"
    echo "Entered $dir directory"

    if command -v npm &>/dev/null; then
      echo "Running npm install..."
      npm install
    else
      echo "Error: npm not found. Please install Node.js and npm."
      echo "Visit: https://nodejs.org/en/download/"
      exit 1
    fi

    cd - >/dev/null
  else
    echo "Error: $dir directory not found. Make sure coc.nvim is installed before running this script."
  fi
}

# Create symbolic links for various config directories
create_symlink "$DOTFILES/kitty" "$HOME/.config/kitty"
create_symlink "$DOTFILES/nvim" "$HOME/.config/nvim"
create_symlink "$DOTFILES/phpactor" "$HOME/.config/phpactor"

# Run Packer sync
run_packer_sync

# Create and enter Packer start folder (where Neovim plugins are installed)
PACKER_START_DIR="$HOME/.local/share/nvim/site/pack/packer/start"
mkdir -p "$PACKER_START_DIR"
cd "$PACKER_START_DIR"
echo "Entered Packer start folder: $PACKER_START_DIR"

# Build telescope-fzf-native.nvim if present
build_telescope_fzf_native "$PACKER_START_DIR/telescope-fzf-native.nvim"

# Check and install ripgrep if not installed
install_package "ripgrep" "install_ripgrep" "command -v rg && rg --version"

# Check and install LF (file manager) if not installed
install_package "lf" "install_lf" "command -v lf && lf -version"

# Run npm install for coc.nvim if present
run_npm_install "$PACKER_START_DIR/coc.nvim"

# Return to the original directory
cd "$DOTFILES"

echo "Neovim installation complete. Use 'nvim' to start up Neovim."

